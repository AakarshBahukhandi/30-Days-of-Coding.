iven an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.
There is only one repeated number in nums, return this repeated number.
You must solve the problem without modifying the array nums and using only constant extra space.


class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        # Step 1: Initialize two pointers, slow and fast
        slow = nums[0]
        fast = nums[0]
        
        # Step 2: Move slow by 1 step and fast by 2 steps until they meet inside the cycle
        while True:
            slow = nums[slow]
            fast = nums[nums[fast]]
            if slow == fast:
                break
        
        # Step 3: Find the entrance to the cycle (the duplicate number)
        slow = nums[0]
        while slow != fast:
            slow = nums[slow]
            fast = nums[fast]
        
        # The position where they meet is the duplicate number
        return slow
